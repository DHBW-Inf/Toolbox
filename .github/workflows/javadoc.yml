on:
  pull_request:
  workflow_call:

permissions:
  contents: write
  pages: write

jobs:
  build:
    name: Build and Deploy Javadoc
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK (ensure you use the right version of Java for your project)
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: "20"
          distribution: "temurin" # Use the appropriate distribution, such as 'zulu', 'adopt', etc.

      # Step 3: Cache Maven dependencies to improve speed
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the project and generate the Javadoc
      - name: Build and generate Javadoc
        run: mvn clean package javadoc:javadoc

      - name: test token
        env:
          user_token: ${{ secrets.SERVICE_USER }}
        run: echo $user_token

      - name: Configure git with github-acions user
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
      - name: Deploy Javadoc to GitHub Pages
        if: ${{ success() }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }} # GitHub provides a token automatically
          publish_dir: ./target/site/apidocs # This is where the Javadoc is generated by Maven
          force_orphan: true
          # destination_dir: javadoc # Optional: Specify a subdirectory for your docs
          # If you want to keep the current content and just update the javadocs folder, set keep_files: true
          keep_files: true
